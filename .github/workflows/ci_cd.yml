name: Odoo Modules Update with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  update-modules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest commit message
        id: get_commit
        run: |
          echo "message<<EOF" >> $GITHUB_OUTPUT
          git log -1 --pretty=%B >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Extract modules from commit message
        id: extract_modules
        run: |
          echo "Commit message:"
          echo "${{ steps.get_commit.outputs.message }}"
          modules=$(echo "${{ steps.get_commit.outputs.message }}" | sed -n 's/.*#odoo-module:\\([^ ]*\\).*/\1/p' || true)
          if [ -z "$modules" ]; then
            echo "No modules found to update."
            modules=""
          fi
          echo "modules=$modules" >> $GITHUB_OUTPUT

      - name: Debug extracted modules
        run: |
          echo "Modules extracted: '${{ steps.extract_modules.outputs.modules }}'"

      - name: SSH into server and update modules
        if: steps.extract_modules.outputs.modules != ''
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ${{ secrets.SSH_FILE_PATH }}
            echo "Pulling latest code..."
            git pull origin ${{ github.ref_name }}
            echo "Updating modules: ${{ steps.extract_modules.outputs.modules }}"
            docker compose exec web odoo -u ${{ steps.extract_modules.outputs.modules }} -d ${{ secrets.ODOO_DB_NAME }} --stop-after-init --no-http